import React, { memo, useEffect, useState } from 'react';
import Head from 'next/head';
import { ContactMeServerDataProps } from '../utils/dataConfigWorkflow.interfaces';
import { UseCmsDataHome } from '../utils/providers/cmsDataProvider';
import { PageLoader } from '../components/Spiners&Loaders/PageLoader';
import { Header } from '../components/Layout/Headers/Header';
import { ContactMeSection } from '../components/Mains/contactMe/ContactMeSection';
import { Footer } from '../components/Layout/Footers/Footer';
import { getCMSData } from '../utils/providers/requests/homeCB';



export default function ContactMe({contactMe}: ContactMeServerDataProps) {

    const { pageClass } =  UseCmsDataHome();
    
    const [showStarterPage, setShowStarterPage] = useState<boolean>(true);

    useEffect(() => {
        const timerId = setTimeout(() => {
            setShowStarterPage(!showStarterPage);
        }, 3500);

        // Return a function to clear the timer before the component is unmounted.
        return () => {
            clearTimeout(timerId);
        }
    }, []);

    return (
        <>
            <Head>
                <title>Contact Me</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            {
                showStarterPage ? (
                    <PageLoader />
                ) : (
                    <body className={pageClass}>
                        <Header />
                        <main className="contactMe">
                            <ContactMeSection 
                                contactMe={contactMe}
                            />
                        </main>                        
                        <Footer />
                    </body>
                )
            }
        </>
    )
}

export async function getServerSideProps(): Promise<{props: ContactMeServerDataProps}> {
    
    const CmsData = await getCMSData();    
    const contactMe = CmsData?.contactMe

    return {props: { contactMe }};
    
}

export const MemoizedContactMe = memo(ContactMe);