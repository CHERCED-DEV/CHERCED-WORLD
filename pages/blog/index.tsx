import React, { useEffect, useState } from 'react';
import Head from 'next/head';
import { useCmsDataHome } from '../../providers/cmsDataProvider';
import { ListBlogCarrousel } from '../../components/atoms/ListItems/ListBlogCarrousel';
import { PageLoader } from '../../components/atoms/Spiners&Loaders/PageLoader';
import { BlogCmsConfig } from '../api/blog/blogData/blog.interface';
import { PostConfig } from '../api/blog/posts/post.interface';
import { Header } from '../../components/molecules/Headers/Header';
import { Footer } from '../../components/molecules/Footers/Footer';


export default function BlogIntro() {

    const { pageClass } = useCmsDataHome()

    const [showStarterPage, setShowStarterPage] = useState<boolean>(true);
    const [BlogPostDataCMS, setBlogPostDataCMS] = useState<BlogCmsConfig>();
    const [postData, setPostData] = useState<PostConfig[]>([]);

    useEffect(() => {
        const timerId = setTimeout(() => {
            setShowStarterPage(!showStarterPage);
        }, 3500);

        // Return a function to clear the timer before the component is unmounted.
        return () => {
            clearTimeout(timerId);
        }
    }, []);

    useEffect(() => {
        let mounted = true;

        const fetchPostsData = async () => {
            const response = await fetch('/api/blog/posts');
            const data = await response.json();
            if (mounted) {
                setPostData(data);
            }
        };

        const fetchBlogData = async () => {
            const response = await fetch('/api/blog/blogData');
            const data = await response.json();
            if (mounted) {
                setBlogPostDataCMS(data);
            }
        };

        fetchBlogData();
        fetchPostsData();

        return () => {
            mounted = false;
        };
    }, []);


    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            {
                showStarterPage ? (<PageLoader />) : (
                    <body className={pageClass}>
                        <Header />
                        <main className="blog">
                            <section className="blog-intro">
                                <h1 className="blog-intro__title">{BlogPostDataCMS?.mainTitle}<strong>{BlogPostDataCMS?.mainTitleStrong}</strong> </h1>
                                <p className="blog-intro__description">{BlogPostDataCMS?.welcomeMenssage}</p>
                                <img className="blog-intro__img"
                                    src={BlogPostDataCMS?.img.src}
                                    alt={BlogPostDataCMS?.img.alt}
                                    loading={BlogPostDataCMS?.img.loading}
                                />
                            </section>
                            <section className="blog-carrousel">
                                <ul className="blog-carrousel__list">
                                    {
                                        postData.map((post: PostConfig, index: number) => (
                                            <ListBlogCarrousel
                                                key={index}
                                                id={post.id}
                                                title={post.title}
                                                description={post.description}
                                                img={{
                                                    src: post.img.src,
                                                    alt: post.img.alt,
                                                    loading: post.img.loading
                                                }}
                                            />
                                        ))
                                    }
                                </ul>
                            </section>
                        </main>
                        <Footer />
                    </body>
                )
            }
        </>
    )
}