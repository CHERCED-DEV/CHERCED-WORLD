import React, { memo, useEffect, useState } from 'react';
import Head from 'next/head';
import { HomeServerDataProps } from '../utils/dataConfigWorkflow.interfaces';
import { UseCmsDataHome } from '../utils/providers/cmsDataProvider';
import { StarterApp } from '../components/Spiners&Loaders/StarterApp';
import { PageLoader } from '../components/Spiners&Loaders/PageLoader';
import { Header } from '../components/Layout/Headers/Header';
import { HomeBanner } from '../components/Mains/Banners/mainBanner/MainBanner';
import { Footer } from '../components/Layout/Footers/Footer';
import { getCMSData } from '../utils/providers/requests/homeCB';


export default function Home({homeBanner}: HomeServerDataProps) {

    const { pageClass } =  UseCmsDataHome();
    
    const [showStarterApp, setShowStarterApp] = useState<boolean>(true);
    const [showPageLoader, setShowPageLoader] = useState<boolean>(false);

    useEffect(() => {
        if (sessionStorage.getItem('showStarterApp') === 'false') {
            setShowStarterApp(false);
            setShowPageLoader(true);
            const timerId = setTimeout(() => {
                setShowPageLoader(false);
            }, 3500);
            return () => {
                clearTimeout(timerId);
            };
        } else {
            const timerId = setTimeout(() => {
                setShowStarterApp(false);
                sessionStorage.setItem('showStarterApp', 'false');
                const pageLoaderTimerId = setTimeout(() => {
                    setShowPageLoader(false);
                }, 3500);
                return () => {
                    clearTimeout(pageLoaderTimerId);
                };
            }, 5500);
            return () => {
                clearTimeout(timerId);
            };
        }
    }, []);

    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            {showStarterApp && <StarterApp />}
            {showPageLoader && <PageLoader />}
            {!showStarterApp && (
                <body className={pageClass}>
                    <Header />
                    <main className="main-home">
                        <HomeBanner 
                            homeBanner={homeBanner}
                        />
                    </main>
                    <Footer />
                </body>
            )}
        </>
    );
}

export async function getServerSideProps(): Promise<{props: HomeServerDataProps}> {
    
    const CmsData = await getCMSData();    
    const homeBanner = CmsData?.homeBanner

    return {props: { homeBanner }};
}

export const MemoizedAboutMe = memo(Home);